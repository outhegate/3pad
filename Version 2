import tkinter as tk
from tkinter import messagebox
import random

# Function to validate login credentials
def validate_login():
    username = entry_username.get()
    password = entry_password.get()
    
    # Simple username and password check (you can replace it with your own validation logic)
    if username == "user" and password == "pass":
        login_frame.pack_forget()  # Hide login frame
        game_frame.pack(pady=20)   # Show game frame
    else:
        messagebox.showerror("Login Error", "Invalid username or password.")

# Function to generate a math problem based on difficulty
def generate_problem(difficulty):
    operations = {
        'Easy': ('+', lambda: (random.randint(1, 10), random.randint(1, 10))),
        'Medium': (random.choice(['-', '*']), lambda: (random.randint(1, 20), random.randint(1, 10))),
        'Hard': (random.choice(['/', '*']), lambda: (random.randint(1, 50), random.randint(1, 20)))
    }
    
    op, operands = operations[difficulty]
    num1, num2 = operands()
    
    if op == '/':
        while num2 == 0:  # Avoid division by zero
            num2 = random.randint(1, 20)
    
    return f"{num1} {op} {num2}", eval(f"{num1} {op} {num2}")

# Function to start a new game
def start_game():
    difficulty = difficulty_var.get()
    problem, answer = generate_problem(difficulty)
    problem_label.config(text=problem)
    global correct_answer
    correct_answer = answer

# Function to check the user's answer
def check_answer():
    try:
        user_answer = int(entry_answer.get())
        if user_answer == correct_answer:
            messagebox.showinfo("Correct!", "Well done! Your answer is correct.")
        else:
            messagebox.showerror("Incorrect", f"Sorry, the correct answer was {correct_answer}.")
    except ValueError:
        messagebox.showerror("Input Error", "Please enter a valid number.")

# Create the main window
root = tk.Tk()
root.title("Math Game")

# Set window size
root.geometry("500x400")  # Set the window size to 500x400 pixels

# Create login frame
login_frame = tk.Frame(root)
login_frame.pack(pady=20, padx=20, fill='both', expand=True)

label_username = tk.Label(login_frame, text="Username:")
label_username.pack(pady=5)
entry_username = tk.Entry(login_frame)
entry_username.pack(pady=5, fill='x')

label_password = tk.Label(login_frame, text="Password:")
label_password.pack(pady=5)
entry_password = tk.Entry(login_frame, show='*')
entry_password.pack(pady=5, fill='x')

login_button = tk.Button(login_frame, text="Login", command=validate_login)
login_button.pack(pady=20)

# Create game frame
game_frame = tk.Frame(root)

difficulty_var = tk.StringVar(value="Easy")

tk.Label(game_frame, text="Choose difficulty:").pack(pady=10)

tk.Radiobutton(game_frame, text="Easy", variable=difficulty_var, value="Easy").pack(anchor='w')
tk.Radiobutton(game_frame, text="Medium", variable=difficulty_var, value="Medium").pack(anchor='w')
tk.Radiobutton(game_frame, text="Hard", variable=difficulty_var, value="Hard").pack(anchor='w')

tk.Button(game_frame, text="Start Game", command=start_game).pack(pady=10)

problem_label = tk.Label(game_frame, text="", font=('Arial', 16))
problem_label.pack(pady=10)

entry_answer = tk.Entry(game_frame, font=('Arial', 16))
entry_answer.pack(pady=5)

check_button = tk.Button(game_frame, text="Check Answer", command=check_answer, font=('Arial', 14))
check_button.pack(pady=10)

# Start the GUI
root.mainloop()
